/* index.js - 
 *
 * Copyright(C) 2015 Web Semantics, Inc/
 * All Rights Reserved.
 *
 * This software is released under the GPL license version 2
 * Read the LICENSE file in this software distribution for
 * more information.
 */

var Local = (function() {

      var colors = [
      '#fafacc',
      '#dfedd6',
      '#b5d6c9',
      '#d5d6b4',
      '#96a69a',
      '#839c95',
      '#e95d44',
      '#6f5f5e'
      ];

      // 1- No shades, 2- One shade light, 3- One shade dark, 4- Two shades
      var shades = 1;

      // The lighter / darker degree of shades
      var shadeFactor = 10;

      var embed        = '<!-- Generated by: https://github.com/websemantics/Color-Palette-Toolkit -->';

      // Template for each color shades
      var htmlTemplate  = ['<section class="box">\
                            <section class="color-full <%this.css_class_name%>"></section>\
                            <h1><%this.color_name%></h1>\
                            <p>#<%this.color_hex%></p>\
                           </section>',
                           '<section class="box">\
                            <section class="color-left <%this.css_class_name%>"></section>\
                            <section class="color-right <%this.css_class_name%>-light"></section>\
                            <h1><%this.color_name%></h1>\
                            <p><b>#<%this.color_hex%></b> (master)</p>\
                            <p>#<%this.light_color_hex%></p>\
                           </section>',
                           '<section class="box">\
                            <section class="color-left <%this.css_class_name%>"></section>\
                            <section class="color-right <%this.css_class_name%>-dark"></section>\
                            <h1><%this.color_name%></h1>\
                            <p><b>#<%this.color_hex%></b> (master)</p>\
                            <p>#<%this.dark_color_hex%></p>\
                           </section>',
                           '<section class="box">\
                            <section class="color-third-left <%this.css_class_name%>-light"></section>\
                            <section class="color-third-middle <%this.css_class_name%>"></section>\
                            <section class="color-third-right <%this.css_class_name%>-dark"></section>\
                            <h1><%this.color_name%></h1>\
                            <p>#<%this.light_color_hex%></p>\
                            <p><b>#<%this.color_hex%></b> (master)</p>\
                            <p>#<%this.dark_color_hex%></p>\
                           </section>'];

      var cssTemplate  = ['.<%this.css_class_name%> {\
                            background-color : #<%this.color_hex%>;\
                          }','.<%this.css_class_name%> {\
                             background-color : #<%this.color_hex%>;\
                             }\
                            .<%this.css_class_name%>-light {\
                              background-color : #<%this.light_color_hex%>;\
                             }','.<%this.css_class_name%> {\
                             background-color : #<%this.color_hex%>;\
                             }\
                            .<%this.css_class_name%>-dark {\
                              background-color : #<%this.dark_color_hex%>;\
                             }','.<%this.css_class_name%> {\
                             background-color : #<%this.color_hex%>;\
                             }\
                            .<%this.css_class_name%>-dark {\
                              background-color : #<%this.dark_color_hex%>;\
                             }\
                            .<%this.css_class_name%>-light {\
                              background-color : #<%this.light_color_hex%>;\
                             }'];

      var bodyTemplate = '<div><%this.html%></div>\
                          <br><div>\
                          <h2>HTML, CSS </h2>\
                            <p>Copy and Paste this code to your project </p>\
                            <form>\
                            <textarea id="code" name="code"><%this.pretty_html%></textarea>\
                            </form></div>\
                         ';

      var box = '      .box {\
                          width: 128px;\
                          background-color: #FFFFFF;\
                          box-shadow: 0 2px 6px #CCC;\
                          border-radius: 5px;\
                          display: inline-block;\
                          margin: 10px;\
                        }\
                        \
                        .box h1 {\
                          font-weight: 400;\
                          font-size: 14px;\
                          color: #494A4A;\
                          display: block;\
                          padding: 55px 0px 5px 5px;\
                          margin: 0px;\
                        }\
                        \
                        .box p {\
                          font-weight: 300;\
                          font-size: 11px;\
                          color: #999999;\
                          display: block;\
                          padding: 0px 0px 5px 5px;\
                          margin: 0px;\
                        }\
                        \
                        .color-full {\
                          width: 128px;\
                          height: 50px;\
                          border-top-left-radius: 5px;\
                          border-top-right-radius: 5px;\
                          display: block;\
                          float: left;\
                        }\
                        \
                        .color-left {\
                          width: 64px;\
                          height: 50px;\
                          border-top-left-radius: 5px;\
                          display: block;\
                          float: left;\
                        }\
                        \
                        .color-right {\
                          width: 64px;\
                          height: 50px;\
                          border-top-right-radius: 5px;\
                          display: block;\
                          float: left;\
                        }\
                        \
                        .color-third-left {\
                          width: 42px;\
                          height: 50px;\
                          border-top-left-radius: 5px;\
                          display: block;\
                          float: left;\
                        }\
                        \
                        .color-third-middle {\
                          width: 44px;\
                          height: 50px;\
                          display: block;\
                          float: left;\
                        }\
                        \
                        .color-third-right {\
                          width: 42px;\
                          height: 50px;\
                          border-top-right-radius: 5px;\
                          display: block;\
                          float: left;\
                        }\
                      ';

      function beautify(source) {

          var output,
              opts = {
                end_with_newline : true,
                brace_style: true
              };

          return html_beautify(source, opts);
      }

      function colorsToHTML() {
    var html = [];
    
    for (var i = 0; i < colors.length; i++) {
        
        // Get the color
        var color = tinycolor(colors[i]);

        // Get the Human color name
        var n_match      = ntc.name(color.toHex());
        var n_rgb        = n_match[0]; // RGB value of closest match
        var n_name       = n_match[1]; // Text string: Color name
        var n_exactmatch = n_match[2]; // True if exact color match

        var color_item = {
            color_name     : n_name,
            css_class_name : 'color-'+InflectionJS.dasherize(n_name.toLowerCase()),
            color_hex      : color.toHex(),
            dark_color_hex : color.darken(shadeFactor).toHex(),
            light_color_hex : color.lighten(shadeFactor * 2).toHex()
        };

        // Just push the hex code, instead of the full HTML structure
        html.push(color_item.color_hex);
    }

    // Join all the hex codes with new lines or space if you want
    return html.join('\n');
}

      function showColorPalette(_colors) {

            colors = _colors || colors;

            $("#result").empty();  
            $("#image").empty();  

            var result = $("#result");

            var html = colorsToHTML();

            result.append(TemplateEngine(bodyTemplate, {
              html: html,
              pretty_html: beautify(embed.trim() + html)
            }));

            var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
              extraKeys: {"Ctrl-Space": "autocomplete"},
            });

      }

      function showShade(_shades) {
          shades = _shades || shades;
          showColorPalette();
      }

      var opts = {
          'aco-file-input' : {
            readAsDefault: 'BinaryString',
            on: {
              load: function(e, file) {
                showColorPalette(Aco.colors(e.target.result));
              }
            }
          },
          'image-file-input' : {
            on: {
              load: function(e, file) {

                var fileDiv = $("#group_" + file.extra.groupID + "_file_" + file.extra.fileID)
                if (file.type.match(/image/)) {
                // Create a thumbnail and add it to the output if it is an image
                var img = new Image();
                img.onload = function(){
                  $('#image').append(img);
                }
                
                img.src = e.target.result;

                var colorThief = new ColorThief();
                var _colors = colorThief.getPalette(img, 8);

                console.log(_colors);

                // Get the pallet colors
                colors = [];

                for (var i = 0; i < _colors.length; i++) {
                  var rgb = _colors[i];
                  colors.push(Aco.rgbToHex(rgb[0], rgb[1], rgb[2]));
                };

                showColorPalette();
              }
            }
          }
        }
      }

      function setShadeFactor(factor) {
          shadeFactor = factor;
          showColorPalette();
      }

        return {
            opts: opts,
            showShade: showShade,
            setShadeFactor: setShadeFactor
        };

    })();

  FileReaderJS.setupInput(document.getElementById('aco-file-input'), Local.opts['aco-file-input']);

  $(function() {
       
    FileReaderJS.setSync(false);

    $("#source").on("change", function() {

      $("#aco-file-input").addClass('hidden');
      $("#image-file-input").addClass('hidden');

      var id = $("#source").val();

      // Change the File input source
      FileReaderJS.setupInput(document.getElementById(id), Local.opts[id]);
      $("#"+id).removeClass('hidden');

    });

    $("#clear-list").on("click", function() {
      $("#result").empty();
      $("#image").empty();
    });

    $("#shades").on("change", function() {
      Local.showShade($("#shades").val());
    });

    $("#shade_factor").on("change", function() {
      Local.setShadeFactor($("#shade_factor").val());
    });

  });
